import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'
import { xcubeTokenAbi, saleNftTokenAbi, xcubeTokenAddress, saleNftTokenAddress } from '../src/ethereum-env'
import { Button, InputGroup, FormControl, Form  } from 'react-bootstrap'

let Web3 = require('web3')



export default function MyNft() {
  const [web3, setWeb3] = useState(null)
  const [xcubeTokenContract, setXcubeTokenContract] = useState(null)
  const [saleNftTokenContract, setSaleNftTokenContract] = useState(null)

  const [wallet, setWallet] = useState('');
  const [myNftTokens, setMyNftTokens] = useState([]);
  const [tokenId, setTokenId] = useState(0);

  const [nftPrice, setNftPrice] = useState(0);
  const [tokenURI, setTokenURI] = useState('');

  const getWallet = async () => {
    try {
      if (window.ethereum) {
        const wallets = await window.ethereum.request({
          method: "eth_requestAccounts",
        });

        setWallet(wallets[0]);
        let w3 = new Web3(window.ethereum)
        w3.eth.handleRevert = true
        setWeb3(w3)

        let x = new w3.eth.Contract(xcubeTokenAbi, xcubeTokenAddress)
        setXcubeTokenContract(x)

        let s = new w3.eth.Contract(saleNftTokenAbi, saleNftTokenAddress)
        setSaleNftTokenContract(s)
      } else {
        alert('you must install metamask')
      }
    } catch (error) {
      console.error(error);
    }
  };

  const getIsApprovedForAll = async () => {
    try {
      const response = await xcubeTokenContract.methods
        .isApprovedForAll(wallet, saleNftTokenAddress)
        .call();

      console.log(response)
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    getWallet();
    //getIsApprovedForAll();
  }, [wallet]);

  const getNFTTokens = async () => {
    try {
      if (!wallet) return;
      if (!web3) return;
      if (!xcubeTokenContract) return;
      
      const balanceLength = await xcubeTokenContract.methods.balanceOf(wallet).call();
      console.log(balanceLength)

      if (balanceLength === "0") return;
      console.log(wallet)

      
      //const result = await xcubeTokenContract.methods.getNFTTokens(wallet).call();
      const result = await xcubeTokenContract.methods.getSaleOnNfts().call();
      console.log(result)
       
      
      // if (response.status) {
        
      //   response.map(v => {
      //     console.log(v)
      //   })
      // }
      
    } catch (error) {
      console.error(error);
    }
  };

  const setIsApprovedForAll = async () => {
    try {
      if (!wallet) return;

      const response = await xcubeTokenContract.methods
        .setApprovalForAll(saleNftTokenAddress, true)
        .send({ from: wallet });
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      <Button onClick={getNFTTokens}>get MyNfts</Button>
      <br></br>
      <Button onClick={getIsApprovedForAll}>get Approval</Button>
      <br></br>
      <Button onClick={setIsApprovedForAll}>set Approval</Button>

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
