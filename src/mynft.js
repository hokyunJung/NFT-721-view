import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'
import { Button, Card, Stack, Form  } from 'react-bootstrap'

export default function MyNft({ wallet, xcubeTokenContract, xcubeTokenAddress }) {
  const [myNftTokens, setMyNftTokens] = useState([]);
  const [tokenId, setTokenId] = useState(0);
  const [nftPrice, setNftPrice] = useState(0);
  const [tokenURI, setTokenURI] = useState('');

  

  const getIsApprovedForAll = async () => {
    try {
      const response = await xcubeTokenContract.methods
        .isApprovedForAll(wallet, xcubeTokenAddress)
        .call();

      console.log(response)
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    //getIsApprovedForAll();
  }, [wallet]);

  const getNFTTokens = async () => {
    try {
      if (!wallet) return;
      if (!xcubeTokenContract) return;
      
      const balanceLength = await xcubeTokenContract.methods.balanceOf(wallet).call();
      console.log(balanceLength)

      if (balanceLength === "0") return;
      console.log(wallet)
      
      const result = await xcubeTokenContract.methods.getNFTTokens(wallet).call();
      //const result = await xcubeTokenContract.methods.getSaleOnNfts().call();
      console.log(result)
       
      setMyNftTokens(result)
      // if (response.status) {
        
      //   response.map(v => {
      //     console.log(v)
      //   })
      // }
      
    } catch (error) {
      console.error(error);
    }
  };

  const setIsApprovedForAll = async () => {
    try {
      if (!wallet) return;

      const response = await xcubeTokenContract.methods
        .setApprovalForAll(xcubeTokenAddress, true)
        .send({ from: wallet });
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      <Stack direction="horizontal" gap={3}>
        {myNftTokens.map(v => {
          return(
            <div className="bg-light border">
              <Card style={{ width: '18rem' }}>
                {/*https://ipfs.io/ipfs/QmSRf8Y2dVK7WbLVzJwLggnG5uxrFx1Fmz35HGatjUeVW5*/}
              <img
      src={v.tokenURI}
      className='img-thumbnail'
      alt='...'
      style={{ maxWidth: '24rem' }}
    />

              <Card.Body>
                <Card.Title>{v.tokenId}</Card.Title>
                <Card.Text>
                {v.tokenURI}
                </Card.Text>
                <Button variant="primary">Go somewhere</Button>
              </Card.Body>
              </Card>
          </div>
          )
        })}
      </Stack>
      
      <Button onClick={getNFTTokens}>get MyNfts</Button>
      <br></br>
      <Button onClick={getIsApprovedForAll}>get Approval</Button>
      <br></br>
      <Button onClick={setIsApprovedForAll}>set Approval</Button>

      </main>

    </div>
  )
}
